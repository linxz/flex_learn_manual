import{_ as n,o as s,c as e,a}from"./app.8a7fda1c.js";const o="/flex_learn_manual/image/02-10-18.png",c="/flex_learn_manual/image/02-10-19.png",i={},l=a(`<h1 id="📕-flex-元素-flex-basis" tabindex="-1"><a class="header-anchor" href="#📕-flex-元素-flex-basis" aria-hidden="true">#</a> 📕 flex 元素：flex-basis</h1><p>在前面了解了 flex 元素的伸（<code>flex-grow</code>）缩（<code>flex-shrink</code>）特性之后，我们还要知道在 flex 元素中，是可以设置该元素在“主轴”上的初始大小。如需要设置 flex 元素在“主轴”上的初始大小，就需要使用 <code>flex-basis</code> 这个属性。</p><p>首先，需要注意一点，<code>flex-basis</code> 是设置了 flex 元素的初始大小，换言之，就是设置了 flex 元素的“宽度”。这所谓的“宽度”是相对于“主轴”而言的，可能是 <code>width</code>，也有可能是 <code>height</code>，总之，就是盒模型中内容区域的尺寸。提到了盒模型，<a href="../../demo.html?id=47">必然需要注意</a> <code>box-sizing</code> 的值将会影响最终我们所设定在 <code>flex-basis</code> 中的值。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 
  file: flex_0047.css
  box-sizing 的值对 flex-basis 的影响。
*/</span>
<span class="token selector">.demo</span> <span class="token punctuation">{</span>
  <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span>
  <span class="token comment">/* 在这里给 flex 容器设置了高度 */</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #000<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/* 从第三个 item 开始隐藏，暂时不需要 */</span>
<span class="token selector">.item:nth-child(n+3)</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> <span class="token comment">/* 不可收缩 */</span>
  <span class="token property">flex-basis</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span> <span class="token comment">/* 基于不可收缩，flex 元素初始大小 */</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 0 50px<span class="token punctuation">;</span> <span class="token comment">/* 增加左右内间距，结合 box-sizing 对比效果 */</span>
<span class="token punctuation">}</span>
<span class="token selector">.item_1</span> <span class="token punctuation">{</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> content-box<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.item_2</span> <span class="token punctuation">{</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="`+o+'" style="zoom:50%;"><p>结合效果图基本上已经能够很直观得展示了 <code>box-sizing</code> 在 <code>flex-basis</code> 也是有影响的。当然，目前现在看到的这个情况是因为 <code>flex-grow</code> 的默认值为 <code>0</code>，以及设置了 <code>flex-shrink: 0;</code>，所以这两个 flex 元素是不会伸缩的。</p><h2 id="特性分解" tabindex="-1"><a class="header-anchor" href="#特性分解" aria-hidden="true">#</a> 特性分解</h2><h3 id="默认值" tabindex="-1"><a class="header-anchor" href="#默认值" aria-hidden="true">#</a> 默认值</h3><p>在 <code>flex-basis</code> 中的<strong>默认值</strong>是 <code>auto</code>，这也是 <code>flex-basis</code> 的关键词属性值。而关键词属性值并非只有 <code>auto</code> 这么一个，还有下面这几个：</p><ul><li><code>fill</code></li><li><code>content</code></li><li><code>fit-content</code></li><li><code>min-content</code></li><li><code>max-content</code></li></ul><p>具体这几个有什么含义呢？从字面上我们基本上也可以理解了，实际效果的话，暂时就先不管吧，因为目前为止通过 caniuse 查找 <code>flex-basis</code> 的兼容性（https://caniuse.com/?search=flex-basis），大部分浏览器都不支持，在不支持的前提下，最终都是<strong>默认值</strong> <code>auto</code> 而已。</p><img src="'+c+'" style="zoom:50%;"><p><code>flex-basis: auto;</code> 的主要作用是让 flex 元素由内容来决定大小。</p><h3 id="指定具体的值" tabindex="-1"><a class="header-anchor" href="#指定具体的值" aria-hidden="true">#</a> 指定具体的值</h3><p>指定具体的值这个就完全看具体的情况来使用了，比如想要实现一行三列平均分的情况，我们可以使用 <code>flex-basis: 33.33%;</code> ，再比如前面我们的 demo 中所用的值是 <code>200px</code>。总之，只要不是负值，再结合 CSS 中的长度单位值就可以了。</p><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2><p><code>flex-basis</code> 比较纯粹，就是控制 flex 元素在“主轴”上的初始大小，最终的值可能会被以下因素影响：</p><ul><li><code>flex-grow</code> 和 <code>flex-shrink</code> 的值；</li><li><code>box-sizing</code> 下不同盒模型的计算方式；</li><li><code>min-width</code> 或者 <code>min-height</code> 的值；</li><li><code>transform</code> 或者 <code>zoom</code> 的值；</li><li>……</li></ul><p>当然，在 CSS 的世界中，还有很多可能性的存在，想要完全概括似乎有点难，对于 <code>flex-basis</code> 通俗点讲，就是与盒模型有关的，会改变“盒子”尺寸的属性，都有可能会有影响。</p>',19),t=[l];function d(p,r){return s(),e("div",null,t)}const m=n(i,[["render",d],["__file","flex-basis.html.vue"]]);export{m as default};
