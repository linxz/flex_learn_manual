import{_ as n,o as s,c as e,a}from"./app.8a7fda1c.js";const t="/flex_learn_manual/image/03-04-01.png",o="/flex_learn_manual/image/03-04-02.png",c="/flex_learn_manual/image/03-04-03.png",i="/flex_learn_manual/image/03-04-04.png",p="/flex_learn_manual/image/03-04-05.png",l="/flex_learn_manual/image/03-04-06.png",d={},r=a('<h1 id="📕-实例-导航条" tabindex="-1"><a class="header-anchor" href="#📕-实例-导航条" aria-hidden="true">#</a> 📕 实例：导航条</h1><p>看到这个导航条，可能有人会疑惑，导航条不就是一行中每个元素肩并肩排好队伍就可以了，有什么好讲的呢。的确，按照常规的方式，导航条无非大概就是下面这张图的样子。</p><img src="'+t+'" style="zoom:50%;"><p>那如果我们稍微有点变化，希望后面两个 <strong>item</strong> 元素是居右显示的，而前面 8 个 <strong>item</strong> 是居左显示的，就像这样：</p><img src="'+o+`" style="zoom:50%;"><p>那么这个时候我们应该怎么办呢？</p><p>或许有人会说，可以使用选择符，让第 9 个 <strong>item</strong> 与第 8 个 <strong>item</strong> 之间增加间距，使用 <code>margin</code> 隔开来不就好了么。虽然这是一个办法，但并不灵活，因为你不知道这两个 <strong>item</strong> 之间的间距有多少，</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/*
  file: flex_0071.css
  常规导航条的样式
*/</span>
<span class="token selector">.demo</span> <span class="token punctuation">{</span>
  <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid #000<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex</span><span class="token punctuation">:</span> 0 50px<span class="token punctuation">;</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这是<a href="../../demo.html?id=71">常规</a>，假设每个 <strong>item</strong> 的宽度初始固定是 <code>50px</code>，且不会放大的一个布局效果。那么按照前面的假设，要实现第 9 个 <strong>item</strong> 开始是居右显示的话，使用 <code>margin</code> 来的确是一个方式，但不能使用具体的值，那么如果使用百分比会如何呢？</p><p>先不说具体要用多少的百分比值，如果像这样使用 <code>20%</code> 的值，会怎么样呢？</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item_9</span> <span class="token punctuation">{</span>
  <span class="token property">margin-left</span><span class="token punctuation">:</span> 20%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="`+c+'" style="zoom:50%;"><p>显然，<a href="../../demo.html?id=73">现在看着是不够的</a>，右边还有空缺。但，如果我们把浏览器的窗口缩小的话……</p><img src="'+i+`" style="zoom:50%;"><p>看着是“完美”了，满足了需求。不过这只是一个假象而已，仅仅只是因为在 <code>20%</code> 这个值的基础上，刚好得到了满足。</p><p>要不使用绝对定位的方式来处理？用 <code>position: absolute;</code> 的话，的确可以将某个元素定位到最后，但仅仅只是某个元素而已，如果是多个元素的话，那么怎么分配定位后的 <code>left</code> 或者 <code>right</code> 呢？</p><p>其实呢，我们还是可以继续在 <code>margin</code> 这个属性上去考虑。可以想一想，曾经我们想让一个块级元素水平居中显示的话，是怎么做的呢？是不是这样：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>是利用了 <code>margin-left</code> 和 <code>margin-right</code> 的值 <code>auto</code>，让一个块级元素由浏览器去计算左右间距的距离，具体的值让浏览器来计算来分配。所以，在这里其实我们也是可以这么操作，让第 9 个 <strong>item</strong> 的左间距为 <code>auto</code>，由浏览器来分配剩余的空间。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item_9</span> <span class="token punctuation">{</span>
  <span class="token property">margin-left</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么这个时候，<a href="../../demo.html?id=72">当我们对浏览器进行缩放</a>，会发现第 8 和第 9 个 <strong>item</strong> 之间的距离会不断地在改变，而当浏览器足够小，他们之间的无法产生距离的时候，就贴合在一起了。</p><img src="`+p+`" style="zoom:50%;"><p>使用 <code>margin-left</code> 是让 8 和 9 之间有间距，那么同时我们给 <code>.item_9</code> 加上 <code>margin-right: auto;</code> 是不是就让 9 和 0 这两个 <strong>item</strong> 之间也有间距了呢？具体间隔值是不是还是由浏览器来分配，就像 <code>margin: 0 auto;</code> 一样，让一个元素居中。</p><p>嗯，如果我们这个时候给 <code>.item_9</code> 加上 <code>margin-right: auto;</code> 不就是 <code>margin: 0 auto;</code> 的感觉了么，那是不是说这第 9 个 <strong>item</strong> 会居中呢？</p><p>如果会居中，那么是相对于浏览器呢，还是说在 <code>.item_8</code> 和 <code>.item_0</code> 之间去均分空间？</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item_9</span> <span class="token punctuation">{</span>
  <span class="token property">margin-left</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
  <span class="token property">margin-right</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当这样的时候，我们<a href="../../demo.html?id=74">得到的结果</a>就是：</p><img src="`+l+'" style="zoom:50%;"><p>所以，当 flex 元素中对于 <code>margin</code> 使用 <code>auto</code> 这个属性值的时候，就让其余相邻的 flex 元素产生间距，且间距值将会有 flex 容器的大小而决定。</p>',29),u=[r];function m(g,v){return s(),e("div",null,u)}const k=n(d,[["render",m],["__file","04.html.vue"]]);export{k as default};
